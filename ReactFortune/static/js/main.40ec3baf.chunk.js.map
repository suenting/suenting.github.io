{"version":3,"sources":["components/Animal.js","components/Cookie.js","App.js","serviceWorker.js","index.js"],"names":["Animal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","urlDict","url","key","title","state","error","isLoaded","image","doRequestAnimal","_this2","fetch","type","then","response","json","result","setState","catch","_this3","_this$state","classes","react_default","a","createElement","Card_default","className","classNames","card","onClick","event","Typography_default","Avatar_default","alt","src","avatar","bigAvatar","Component","withStyles","row","display","justifyContent","margin","width","height","padding","Cookie","key2","text","doRequestCookie","App","Paper_default","index_es","align","components_Animal","components_Cookie","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40ec3baf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n    row: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    avatar: {\r\n      margin: 10\r\n    },\r\n    bigAvatar: {\r\n      width: 120,\r\n      height: 120,\r\n    },\r\n    card:{\r\n        width: 150,\r\n        padding: 5,\r\n        margin: 5,\r\n        display: \"inline-block\",\r\n    },\r\n  };\r\n\r\nclass Animal extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.urlDict = [];\r\n        this.urlDict[\"cat\"]={url:\"https://aws.random.cat/meow\", key:\"file\", title:\"random cat (https://aws.random.cat/)\"};\r\n        this.urlDict[\"dog\"]={url:\"https://dog.ceo/api/breeds/image/random\", key:\"message\", title:\"random dog (https://dog.ceo/api/)\"};\r\n        this.urlDict[\"dog2\"]={url:\"https://random.dog/woof.json\", key:\"url\", title:\"random dog (https://random.dog/)\"};\r\n        // no coors...\r\n        //this.urlDict[\"fox\"]={url:\"https://randomfox.ca/floof/\", key:\"image\"};\r\n\r\n        this.state = {\r\n            error:false,\r\n            isLoaded:false,\r\n            image:null,\r\n            title:null,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.doRequestAnimal();\r\n    }\r\n\r\n    doRequestAnimal(){\r\n        fetch(this.urlDict[this.props.type].url)\r\n        .then(response=>response.json())\r\n        .then((result)=>{\r\n            this.setState({\r\n                image: result[this.urlDict[this.props.type].key],\r\n                isLoaded: true,\r\n                title: this.urlDict[this.props.type].title,\r\n            });\r\n        })\r\n        .catch((error)=>{\r\n            this.setState({\r\n                error: true,\r\n                isLoaded: true\r\n            });                \r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {error, isLoaded, image, title} = this.state;\r\n        const {classes} = this.props;\r\n        if(error)\r\n        {\r\n            return(<Card className={classNames(classes.card)} onClick={(event)=>this.doRequestAnimal()}>\r\n                <center>\r\n                <Typography>Failed to Load</Typography>\r\n                </center>\r\n            </Card>);\r\n        }\r\n        if(!isLoaded)\r\n        {\r\n            return(\r\n            <Card className={classNames(classes.card)}>\r\n            <center>\r\n            <img src=\"./spinner.gif\" alt=\"animal\"></img>\r\n            </center>\r\n            </Card>                \r\n            );\r\n        }\r\n        return(\r\n            <Card className={classNames(classes.card)} onClick={(event)=>this.doRequestAnimal()}>\r\n                <center>\r\n                <Avatar\r\n                    alt=\"animal\"\r\n                    src={image}\r\n                    className={classNames(classes.avatar, classes.bigAvatar)}\r\n                />\r\n                <Typography>{title}</Typography>\r\n                </center>\r\n            </Card>\r\n        )\r\n    };\r\n}\r\n\r\nAnimal.propTypes ={\r\n    classes: PropTypes.object.isRequired,\r\n    type: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles) (Animal);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n    row: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    avatar: {\r\n      margin: 10\r\n    },\r\n    bigAvatar: {\r\n      width: 120,\r\n      height: 120,\r\n    },\r\n    card:{\r\n        width: 250,\r\n        height: 75,\r\n        padding: 5,\r\n        margin: 5,\r\n        display: \"inline-block\",\r\n    },\r\n  };\r\n\r\nclass Cookie extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.urlDict = [];\r\n        this.urlDict[\"advice\"]={url:\"https://api.adviceslip.com/advice\", key:\"slip\", key2:\"advice\", title:\"random cat (https://aws.random.cat/)\"};\r\n        this.urlDict[\"chuck\"]={url:\"https://api.chucknorris.io/jokes/random\", key:\"value\", title:\"random cat (https://aws.random.cat/)\"};\r\n\r\n        this.state = {\r\n            error:false,\r\n            isLoaded:false,\r\n            text:null,\r\n            title:null,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.doRequestCookie();\r\n    }\r\n\r\n    doRequestCookie(){\r\n        fetch(this.urlDict[this.props.type].url)\r\n        .then(response=>response.json())\r\n        .then((result)=>{\r\n            var text =\"\";\r\n            var key = this.urlDict[this.props.type].key;\r\n            var key2 = this.urlDict[this.props.type].key2;\r\n            if(key2){\r\n                text = result[key][key2];\r\n            }\r\n            else{\r\n                text = result[key];\r\n            }\r\n            this.setState({\r\n                text: text,\r\n                isLoaded: true,\r\n                title: this.urlDict[this.props.type].title,\r\n            });\r\n        })\r\n        .catch((error)=>{\r\n            this.setState({\r\n                error: true,\r\n                isLoaded: true\r\n            });                \r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {error, isLoaded, text, title} = this.state;\r\n        const {classes} = this.props;\r\n        if(error)\r\n        {\r\n            return <div>Failed to load</div>\r\n        }\r\n        if(!isLoaded)\r\n        {\r\n            return(\r\n                <Card className={classNames(classes.card)}>\r\n                    <img src=\"./spinner.gif\" alt=\"cookie\"></img>\r\n                </Card>\r\n            )\r\n        }\r\n        return(\r\n            <Card className={classNames(classes.card)} onClick={(event)=>this.doRequestCookie()}>\r\n                <center>\r\n                <Typography>{text}</Typography>\r\n                </center>\r\n            </Card>\r\n        )\r\n    };\r\n}\r\n\r\nCookie.propTypes ={\r\n    classes: PropTypes.object.isRequired,\r\n    type: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles) (Cookie);","import React, { Component } from 'react';\nimport './App.css';\nimport Animal from './components/Animal';\nimport Cookie from './components/Cookie';\nimport Paper from '@material-ui/core/Paper';\n\nimport { Typography } from '@material-ui/core';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Paper>\n          <Typography align=\"center\">\n            Animal Components\n          </Typography>\n          <br />\n          <Animal type=\"cat\"></Animal>\n          <Animal type=\"dog\"></Animal>\n          <Animal type=\"dog2\"></Animal>\n          <hr />\n        </Paper>\n        <Paper>\n        <Typography align=\"center\">\n            Advice\n          </Typography>\n          <br />\n          Advice: <br /><Cookie type=\"advice\"></Cookie>\n          <br />\n          Chuck Noris Jokes:<br /><Cookie type=\"chuck\"></Cookie>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}